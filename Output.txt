Count the number of complete components
class Solution {
List<List<Integer>> adj;
boolean visit[];
int vcnt,ecnt;
void dfs(int n){
visit[n] = true;
++vcnt;
for(var c:adj.get(n)){
ecnt++;
if(!visit[c]){
dfs(c);
}
}

50

}
public int countCompleteComponents(int n, int[][] edges) {
adj = new ArrayList<>();
visit = new boolean[n];
for(int i = 0;i < n;i++) adj.add(new ArrayList<>());
for(var e:edges){
adj.get(e[0]).add(e[1]);
adj.get(e[1]).add(e[0]);
}
int ans = 0;
for(int i = 0;i < n;i++){
if(!visit[i]){
vcnt = 0;
ecnt = 0;
dfs(i);
if((vcnt * (vcnt - 1)) == ecnt) ++ans;
}
}
return ans;

}
}
